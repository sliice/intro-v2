{"ast":null,"code":"var _jsxFileName = \"/Users/alisakrylova/Intro/client/src/components/Students.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport './Appearence/index.css';\nimport './Appearence/Students.css';\nimport { useHttp } from \"../Hooks/http.hook\";\nimport { AuthContext } from \"./Context/AuthContext\";\nimport { NavLink } from \"react-router-dom\";\nexport const Students = () => {\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp(); // const [form, setForm] = useState({\n  //     login: '',\n  //     password: '',\n  //     type: '',\n  //     pic: '',\n  //     name: '',\n  //     surname: '',\n  //     grade: null,\n  //     letter: '',\n  //     birthdate: ''\n  // })\n\n  const [grades, setGrades] = useState([]); // const [students, setStudents] = useState([])\n\n  const [shown, setShown] = useState([]);\n  const [isSearching, activateSearching] = useState('none');\n  const [search, setSearch] = useState('');\n  const {\n    token\n  } = useContext(AuthContext); // const changeHandler = event => {\n  //     setForm({...form, [event.target.name]: event.target.value})\n  // }\n  // const registerHandler = async () => {\n  //     try {\n  //         const data = await request('api/students/create', 'POST', {...form})\n  //         console.log(data.message)\n  //         if (data.message === 'User\\'ve created'){\n  //             setForm({\n  //                 login: '',\n  //                 password: '',\n  //                 type: '',\n  //                 pic: '',\n  //                 name: '',\n  //                 surname: '',\n  //                 grade: null,\n  //                 letter: '',\n  //                 birthdate: ''\n  //             })\n  //         }\n  //     }\n  //     catch (e) {}\n  // }\n\n  const fetchGrades = useCallback(async () => {\n    try {\n      const fetched = await request('/api/students', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      fetched.sort((a, b) => a.grade > b.grade ? 1 : -1);\n      setGrades(fetched);\n    } catch (e) {}\n  }, [token, request]);\n\n  const handleSearchActivating = e => {\n    e.preventDefault();\n\n    switch (isSearching) {\n      case 'active':\n        activateSearching('inactive');\n        break;\n\n      case 'none':\n      case 'inactive':\n        activateSearching('active');\n        document.getElementById('search').focus();\n        break;\n    }\n  };\n\n  const setSearchFilter = e => {\n    e.preventDefault();\n    let search = e.target.value.toString().toLowerCase();\n    setSearch(search);\n    if (search != '') doSearch();else showAll();\n  };\n\n  const doSearch = e => {// try {\n    //     if (search != '') {\n    //         let studentsArray = []\n    //         students.map(student => {\n    //             studentsArray.push((student.name + student.surname).toString().toLowerCase())\n    //         })\n    //\n    //         let indexes = []\n    //         studentsArray.map((student, i) => {\n    //             if (studentsArray[i].toString().includes(search))\n    //                 indexes.push(i)\n    //         })\n    //\n    //         if (indexes.length != 0)\n    //             setShown([...indexes])\n    //         else showAll()\n    //     }\n    //     else showAll()\n    // }\n    // catch (e) {}\n  };\n\n  const showAll = () => {\n    let shownSize = [];\n\n    for (let i = 0; i < grades.length; i++) {\n      shownSize.push(i);\n    }\n\n    setShown([...shownSize]);\n  };\n\n  useEffect(() => {\n    fetchGrades();\n    document.body.style = 'transition-duration: .5s; transition-timing-function: ease-in-out; background: white;'; // console.log('😊'.codePointAt())\n    // console.log(String.fromCodePoint(128522))\n\n    if (shown.length == 0) showAll();\n  }, [fetchGrades, showAll]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"\\u0423\\u0447\\u0435\\u043D\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchAndSort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"search\",\n    className: isSearching === 'active' && 'searchAppearing' || isSearching === 'inactive' && 'searchDisappearing' || isSearching === 'none' && 'invisible',\n    placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u0430\\u043C \\u0438 \\u043A\\u043B\\u0430\\u0441\\u0441\\u0430\\u043C\",\n    onChange: setSearchFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"searchIcon\",\n    name: \"searchIcon\",\n    width: \"250px\",\n    height: \"277px\",\n    viewBox: \"0 0 250 277\",\n    version: \"1.1\",\n    onClick: handleSearchActivating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Logo\",\n    stroke: \"none\",\n    \"stroke-width\": \"1\",\n    fill: \"none\",\n    \"fill-rule\": \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: isSearching === 'active' && 'activeStroke activeFill' || isSearching === 'inactive' && 'inactiveStroke inactiveFill' || isSearching === 'none' && 'inactiveStroke inactiveFill',\n    d: \"M256.23536,245.633373 C256.240323,245.854751 256.242819,246.076789 256.242819,246.299457 C256.242819,261.211145 245.049938,273.299457 231.242819,273.299457 C217.4357,273.299457 206.242819,261.211145 206.242819,246.299457 C206.242819,246.076789 206.245315,245.854751 206.250278,245.633373 Z\",\n    id: \"Combined-Shape\",\n    transform: \"translate(231.242819, 259.466415) rotate(-40.000000) translate(-231.242819, -259.466415) \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Rectangle\",\n    className: isSearching === 'active' && 'activeStroke activeFill' || isSearching === 'inactive' && 'inactiveStroke inactiveFill' || isSearching === 'none' && 'inactiveStroke inactiveFill',\n    transform: \"translate(199.856726, 222.096267) rotate(-40.000000) translate(-199.856726, -222.096267) \",\n    x: \"174.856726\",\n    y: \"186.596267\",\n    width: \"50\",\n    height: \"71\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Oval\",\n    className: isSearching === 'active' && 'activeStroke' || isSearching === 'inactive' && 'inactiveStroke' || isSearching === 'none' && 'inactiveStroke',\n    \"stroke-width\": \"50\",\n    cx: \"125\",\n    cy: \"125\",\n    r: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"students\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, grades.map((grade, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gradeItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, grade.grade, grade.letter), grade.students.map((student, index) => {\n      if (shown.includes(index)) {\n        return /*#__PURE__*/React.createElement(NavLink, {\n          to: '/profile/' + student.user,\n          key: index,\n          className: \"studentItem soft_appearing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"nameAndSurname\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 61\n          }\n        }, student.name, \" \", student.surname)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"pic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 57\n          }\n        }, String.fromCodePoint(student.pic)));\n      }\n    }));\n  } // grade.students.map((student, index) => {\n  //     if (shown.includes(index)){\n  //         return (\n  //             <NavLink to = {'/profile/' + student.user} key = {index} className = 'studentItem soft_appearing'>\n  //                 <div className = 'nameAndSurname'>\n  //                     <p>{student.name} {student.surname} {grade.grade}</p>\n  //                 </div>\n  //                 <p className = 'pic'>{String.fromCodePoint(student.pic)}</p>\n  //                 {/*<p className = 'testName'>{student.birthdate}</p>*/}\n  //                 {/*<p className = 'testName'>{student.grade}{student.letter}</p>*/}\n  //             </NavLink>\n  //         )\n  //     }\n  //  })\n  )));\n};\nexport default Students;","map":{"version":3,"sources":["/Users/alisakrylova/Intro/client/src/components/Students.js"],"names":["React","useCallback","useContext","useEffect","useState","useHttp","AuthContext","NavLink","Students","loading","request","error","clearError","grades","setGrades","shown","setShown","isSearching","activateSearching","search","setSearch","token","fetchGrades","fetched","Authorization","sort","a","b","grade","e","handleSearchActivating","preventDefault","document","getElementById","focus","setSearchFilter","target","value","toString","toLowerCase","doSearch","showAll","shownSize","i","length","push","body","style","map","index","letter","students","student","includes","user","name","surname","String","fromCodePoint","pic"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,OAAO,wBAAP;AACA,OAAO,2BAAP;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAE1B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAwCP,OAAO,EAArD,CAF0B,CAI1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC,CAf0B,CAgB1B;;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,WAAD,EAAcC,iBAAd,IAAmCd,QAAQ,CAAC,MAAD,CAAjD;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAACiB,IAAAA;AAAD,MAAUnB,UAAU,CAACI,WAAD,CAA1B,CApB0B,CAsB1B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMgB,WAAW,GAAGrB,WAAW,CAAC,YAAY;AACxC,QAAI;AACA,YAAMsB,OAAO,GAAG,MAAMb,OAAO,CAAC,eAAD,EAAkB,KAAlB,EAAyB,IAAzB,EAA+B;AACxDc,QAAAA,aAAa,EAAG,UAASH,KAAM;AADyB,OAA/B,CAA7B;AAGAE,MAAAA,OAAO,CAACE,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhD;AACAd,MAAAA,SAAS,CAACS,OAAD,CAAT;AAEH,KAPD,CAOE,OAAOM,CAAP,EAAU,CAAE;AACjB,GAT8B,EAS5B,CAACR,KAAD,EAAQX,OAAR,CAT4B,CAA/B;;AAWA,QAAMoB,sBAAsB,GAAGD,CAAC,IAAI;AAChCA,IAAAA,CAAC,CAACE,cAAF;;AACA,YAAQd,WAAR;AACI,WAAK,QAAL;AACIC,QAAAA,iBAAiB,CAAC,UAAD,CAAjB;AACA;;AACJ,WAAK,MAAL;AACA,WAAK,UAAL;AACIA,QAAAA,iBAAiB,CAAC,QAAD,CAAjB;AACAc,QAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC;AACA;AARR;AAUH,GAZD;;AAcA,QAAMC,eAAe,GAAGN,CAAC,IAAI;AACzBA,IAAAA,CAAC,CAACE,cAAF;AACA,QAAIZ,MAAM,GAAGU,CAAC,CAACO,MAAF,CAASC,KAAT,CAAeC,QAAf,GAA0BC,WAA1B,EAAb;AACAnB,IAAAA,SAAS,CAACD,MAAD,CAAT;AACA,QAAIA,MAAM,IAAI,EAAd,EACIqB,QAAQ,GADZ,KAEKC,OAAO;AACf,GAPD;;AASI,QAAMD,QAAQ,GAAGX,CAAC,IAAI,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GArBD;;AAuBA,QAAMY,OAAO,GAAG,MAAM;AAClB,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9B,MAAM,CAAC+B,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnCD,MAAAA,SAAS,CAACG,IAAV,CAAeF,CAAf;AACH;;AACD3B,IAAAA,QAAQ,CAAC,CAAC,GAAG0B,SAAJ,CAAD,CAAR;AACH,GAND;;AAUJvC,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,WAAW;AACXU,IAAAA,QAAQ,CAACc,IAAT,CAAcC,KAAd,GAAsB,uFAAtB,CAFY,CAGZ;AACA;;AACA,QAAIhC,KAAK,CAAC6B,MAAN,IAAgB,CAApB,EAAuBH,OAAO;AACjC,GANQ,EAMN,CAACnB,WAAD,EAAcmB,OAAd,CANM,CAAT;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,eAEI;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAG,MAAd;AAAqB,IAAA,EAAE,EAAG,QAA1B;AACO,IAAA,SAAS,EAAMxB,WAAW,KAAK,QAAhB,IAA4B,iBAA5B,IACfA,WAAW,KAAK,UAAhB,IAA8B,oBADf,IAEfA,WAAW,KAAK,MAAhB,IAA0B,WAHjC;AAIO,IAAA,WAAW,EAAG,gJAJrB;AAImD,IAAA,QAAQ,EAAIkB,eAJ/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAA8B,IAAA,IAAI,EAAG,YAArC;AAAkD,IAAA,KAAK,EAAC,OAAxD;AAAgE,IAAA,MAAM,EAAC,OAAvE;AAA+E,IAAA,OAAO,EAAC,aAAvF;AAAqG,IAAA,OAAO,EAAC,KAA7G;AACK,IAAA,OAAO,EAAIL,sBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAG,IAAA,EAAE,EAAC,MAAN;AAAa,IAAA,MAAM,EAAC,MAApB;AAA2B,oBAAa,GAAxC;AAA4C,IAAA,IAAI,EAAC,MAAjD;AAAwD,iBAAU,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAOb,WAAW,KAAK,QAAhB,IAA4B,yBAA5B,IACtBA,WAAW,KAAK,UAAhB,IAA8B,6BADR,IAEtBA,WAAW,KAAK,MAAhB,IAA0B,6BAF1B;AAGM,IAAA,CAAC,EAAC,mSAHR;AAG4S,IAAA,EAAE,EAAC,gBAH/S;AAGgU,IAAA,SAAS,EAAC,2FAH1U;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAM,IAAA,EAAE,EAAC,WAAT;AACM,IAAA,SAAS,EAAOA,WAAW,KAAK,QAAhB,IAA4B,yBAA5B,IAChBA,WAAW,KAAK,UAAhB,IAA8B,6BADd,IAEhBA,WAAW,KAAK,MAAhB,IAA0B,6BAHhC;AAIM,IAAA,SAAS,EAAC,2FAJhB;AAI4G,IAAA,CAAC,EAAC,YAJ9G;AAI2H,IAAA,CAAC,EAAC,YAJ7H;AAI0I,IAAA,KAAK,EAAC,IAJhJ;AAIqJ,IAAA,MAAM,EAAC,IAJ5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAUI;AAAQ,IAAA,EAAE,EAAC,MAAX;AACQ,IAAA,SAAS,EAAOA,WAAW,KAAK,QAAhB,IAA4B,cAA5B,IAChBA,WAAW,KAAK,UAAhB,IAA8B,gBADd,IAEhBA,WAAW,KAAK,MAAhB,IAA0B,gBAHlC;AAIQ,oBAAa,IAJrB;AAI0B,IAAA,EAAE,EAAC,KAJ7B;AAImC,IAAA,EAAE,EAAC,KAJtC;AAI4C,IAAA,CAAC,EAAC,KAJ9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CAFJ,CAPJ,CAFJ,eA8DI;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,MAAM,CAACmC,GAAP,CAAW,CAACpB,KAAD,EAAQqB,KAAR,KACP;AACI,wBACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIrB,KAAK,CAACA,KAAV,EAAiBA,KAAK,CAACsB,MAAvB,CADJ,EAGQtB,KAAK,CAACuB,QAAN,CAAeH,GAAf,CAAmB,CAACI,OAAD,EAAUH,KAAV,KAAoB;AACnC,UAAIlC,KAAK,CAACsC,QAAN,CAAeJ,KAAf,CAAJ,EAA0B;AACtB,4BACI,oBAAC,OAAD;AAAS,UAAA,EAAE,EAAI,cAAcG,OAAO,CAACE,IAArC;AAA2C,UAAA,GAAG,EAAIL,KAAlD;AAAyD,UAAA,SAAS,EAAG,4BAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIG,OAAO,CAACG,IAAZ,OAAmBH,OAAO,CAACI,OAA3B,CADJ,CADJ,eAII;AAAG,UAAA,SAAS,EAAG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBC,MAAM,CAACC,aAAP,CAAqBN,OAAO,CAACO,GAA7B,CAAtB,CAJJ,CADJ;AAQH;AACJ,KAXD,CAHR,CADJ;AAmBH,GArBL,CAyBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCJ,GAFR,CA9DJ,CADJ;AAgHH,CA7OM;AA+OP,eAAenD,QAAf","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react';\nimport './Appearence/index.css'\nimport './Appearence/Students.css';\nimport {useHttp} from \"../Hooks/http.hook\";\nimport {AuthContext} from \"./Context/AuthContext\";\nimport {NavLink} from \"react-router-dom\";\n\n\nexport const Students = () => {\n\n    const {loading, request, error, clearError} = useHttp();\n\n    // const [form, setForm] = useState({\n    //     login: '',\n    //     password: '',\n    //     type: '',\n    //     pic: '',\n    //     name: '',\n    //     surname: '',\n    //     grade: null,\n    //     letter: '',\n    //     birthdate: ''\n    // })\n    const [grades, setGrades] = useState([])\n    // const [students, setStudents] = useState([])\n    const [shown, setShown] = useState([])\n    const [isSearching, activateSearching] = useState('none')\n    const [search, setSearch] = useState('')\n    const {token} = useContext(AuthContext)\n\n    // const changeHandler = event => {\n    //     setForm({...form, [event.target.name]: event.target.value})\n    // }\n\n    // const registerHandler = async () => {\n    //     try {\n    //         const data = await request('api/students/create', 'POST', {...form})\n    //         console.log(data.message)\n    //         if (data.message === 'User\\'ve created'){\n    //             setForm({\n    //                 login: '',\n    //                 password: '',\n    //                 type: '',\n    //                 pic: '',\n    //                 name: '',\n    //                 surname: '',\n    //                 grade: null,\n    //                 letter: '',\n    //                 birthdate: ''\n    //             })\n    //         }\n    //     }\n    //     catch (e) {}\n    // }\n\n    const fetchGrades = useCallback(async () => {\n        try {\n            const fetched = await request('/api/students', 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            fetched.sort((a, b) => a.grade > b.grade ? 1 : -1);\n            setGrades(fetched)\n\n        } catch (e) {}\n    }, [token, request])\n\n    const handleSearchActivating = e => {\n        e.preventDefault()\n        switch (isSearching){\n            case 'active':\n                activateSearching('inactive');\n                break\n            case 'none':\n            case 'inactive':\n                activateSearching('active');\n                document.getElementById('search').focus()\n                break\n        }\n    }\n\n    const setSearchFilter = e => {\n        e.preventDefault()\n        let search = e.target.value.toString().toLowerCase()\n        setSearch(search)\n        if (search != '')\n            doSearch()\n        else showAll()\n    }\n\n        const doSearch = e => {\n            // try {\n            //     if (search != '') {\n            //         let studentsArray = []\n            //         students.map(student => {\n            //             studentsArray.push((student.name + student.surname).toString().toLowerCase())\n            //         })\n            //\n            //         let indexes = []\n            //         studentsArray.map((student, i) => {\n            //             if (studentsArray[i].toString().includes(search))\n            //                 indexes.push(i)\n            //         })\n            //\n            //         if (indexes.length != 0)\n            //             setShown([...indexes])\n            //         else showAll()\n            //     }\n            //     else showAll()\n            // }\n            // catch (e) {}\n        }\n\n        const showAll = () => {\n            let shownSize = []\n            for (let i = 0; i < grades.length; i++){\n                shownSize.push(i)\n            }\n            setShown([...shownSize])\n        }\n\n\n\n    useEffect(() => {\n        fetchGrades()\n        document.body.style = 'transition-duration: .5s; transition-timing-function: ease-in-out; background: white;'\n        // console.log('😊'.codePointAt())\n        // console.log(String.fromCodePoint(128522))\n        if (shown.length == 0) showAll()\n    }, [fetchGrades, showAll])\n\n\n\n\n    return(\n        <div>\n            <h1>Ученики</h1>\n            <div className = 'searchAndSort'>\n                <input type = 'text' id = 'search'\n                       className = {  isSearching === 'active' && 'searchAppearing' ||\n                       isSearching === 'inactive' && 'searchDisappearing' ||\n                       isSearching === 'none' && 'invisible'}\n                       placeholder = 'Поиск по ученикам и классам' onChange = {setSearchFilter}/>\n\n                <svg className = 'searchIcon' name = 'searchIcon' width=\"250px\" height=\"277px\" viewBox=\"0 0 250 277\" version=\"1.1\"\n                     onClick = {handleSearchActivating}>\n                    <g id=\"Logo\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                        <path className = {   isSearching === 'active' && 'activeStroke activeFill' ||\n                        isSearching === 'inactive' && 'inactiveStroke inactiveFill' ||\n                        isSearching === 'none' && 'inactiveStroke inactiveFill'}\n                              d=\"M256.23536,245.633373 C256.240323,245.854751 256.242819,246.076789 256.242819,246.299457 C256.242819,261.211145 245.049938,273.299457 231.242819,273.299457 C217.4357,273.299457 206.242819,261.211145 206.242819,246.299457 C206.242819,246.076789 206.245315,245.854751 206.250278,245.633373 Z\" id=\"Combined-Shape\" transform=\"translate(231.242819, 259.466415) rotate(-40.000000) translate(-231.242819, -259.466415) \"></path>\n                        <rect id=\"Rectangle\"\n                              className = {   isSearching === 'active' && 'activeStroke activeFill' ||\n                              isSearching === 'inactive' && 'inactiveStroke inactiveFill' ||\n                              isSearching === 'none' && 'inactiveStroke inactiveFill'}\n                              transform=\"translate(199.856726, 222.096267) rotate(-40.000000) translate(-199.856726, -222.096267) \" x=\"174.856726\" y=\"186.596267\" width=\"50\" height=\"71\"></rect>\n                        <circle id=\"Oval\"\n                                className = {   isSearching === 'active' && 'activeStroke' ||\n                                isSearching === 'inactive' && 'inactiveStroke' ||\n                                isSearching === 'none' && 'inactiveStroke'}\n                                stroke-width=\"50\" cx=\"125\" cy=\"125\" r=\"100\"></circle>\n                    </g>\n                </svg>\n\n                {/*<svg className = 'sortIcon' id = 'sortIcon' onClick = {doSort} width=\"378px\" height=\"282px\" viewBox=\"0 0 378 282\" version=\"1.1\">*/}\n                {/*    <g id=\"Logo\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">*/}\n                {/*        <path d=\"M96.0389392,1 C106.609669,1 115.859436,5.58308193 120.9273,12.4308996 L121.015825,12.5525321 L184.479,88.185 L184.496508,88.1714212 C184.642609,88.3378163 184.787245,88.5063032 184.930373,88.6768766 C194.515421,100.099893 193.711394,116.554722 183.134527,125.429767 C172.70048,134.184972 156.653546,132.29306 147.020097,121.273869 L146.992363,121.296357 L121.038,90.365 L121.038939,199 L121.03148,199 C121.036443,199.221378 121.038939,199.443416 121.038939,199.666084 C121.038939,214.577772 109.846058,226.666084 96.0389392,226.666084 C82.2318205,226.666084 71.0389392,214.577772 71.0389392,199.666084 C71.0389392,199.443416 71.041435,199.221378 71.0463979,199 L71.0389392,199 L71.038,90.942 L46.409,120.293 L46.4188636,120.301213 C46.2803665,120.473988 46.1395549,120.645684 45.9964268,120.816257 C36.4113784,132.239273 20.0669169,134.304812 9.49005029,125.429767 C-0.91459931,116.699229 -1.8620698,100.633732 7.23426161,89.2388073 L7.21214233,89.2211541 L69.5356122,14.9464184 C74.0533978,6.728782 84.2205763,1 96.0389392,1 Z\" id=\"Combined-Shape\"*/}\n                {/*              stroke=\"#4A4A4A\" fill=\"#4A4A4A\"></path>*/}\n                {/*        <path d=\"M282.185638,55 C294.279566,55 304.644412,60.9990492 308.99572,69.5252612 L370.259061,142.536 L370.296508,142.505337 C370.442609,142.671732 370.587245,142.840219 370.730373,143.010793 C380.315421,154.433809 379.511394,170.888638 368.934527,179.763683 C358.495096,188.523405 342.436985,186.625021 332.805192,175.590722 L332.757304,175.630273 L306.803061,144.699 L306.80388,253.333916 L306.796421,253.333916 C306.801384,253.555294 306.80388,253.777332 306.80388,254 C306.80388,268.911688 295.610999,281 281.80388,281 C267.996761,281 256.80388,268.911688 256.80388,254 C256.80388,253.777332 256.806376,253.555294 256.811339,253.333916 L256.80388,253.333916 L256.803061,145.276 L232.172061,174.629 L232.179924,174.635129 C232.041427,174.807904 231.900616,174.9796 231.757488,175.150173 C222.172439,186.573189 205.827978,188.638728 195.251111,179.763683 C184.845967,171.03273 183.898901,154.96612 192.99662,143.571098 L192.977083,143.55507 L255.890594,68.5762614 C260.507198,60.5572584 270.545545,55 282.185638,55 Z\" id=\"Combined-Shape-Copy-10\"*/}\n                {/*              stroke=\"#D6D6D6\" fill=\"#D6D6D6\" transform=\"translate(282.092819, 168.000000) rotate(180.000000) translate(-282.092819, -168.000000) \"></path>*/}\n                {/*    </g>*/}\n                {/*</svg>*/}\n\n\n\n            </div>\n            {/*<div className = 'authform'>*/}\n            {/*    <input type='text' id = 'login' name='login' placeholder='Логин' onChange={changeHandler} value = {form.login}/>*/}\n            {/*    <input type='text' id = 'password' name='password' placeholder='Пароль' onChange={changeHandler} value = {form.password}/>*/}\n            {/*    <input type='text' id = 'type' name='type' placeholder='Тип' onChange={changeHandler} value = {form.type}/>*/}\n            {/*    <input type='text' id = 'name' name='name' placeholder='Имя' onChange={changeHandler} value = {form.name}/>*/}\n            {/*    <input type='text' id = 'surname' name='surname' placeholder='Фамилия' onChange={changeHandler} value = {form.surname}/>*/}\n            {/*    { form.type === 'u' &&*/}\n            {/*        <input type='text' id = 'grade' name='grade' placeholder='Класс' onChange={changeHandler} value = {form.grade}/>}*/}\n            {/*    { form.type === 'u' &&*/}\n            {/*        <input type='text' id = 'letter' name='letter' placeholder='Буква' onChange={changeHandler} value = {form.letter}/>}*/}\n            {/*    { students.map((student) => {*/}\n            {/*        return (*/}\n            {/*            <div key = {student._id} className = 'authform'>*/}\n            {/*                /!*<h2>{student._id}</h2>*!/*/}\n            {/*                <h2>{student.grade}{student.letter}</h2>*/}\n            {/*                <h2>{student.name} {student.surname}</h2>*/}\n            {/*            </div>*/}\n            {/*        )*/}\n            {/*    }) }*/}\n            {/*</div>*/}\n            {/*<input type='button' className = 'loginbtn' value='reg' onClick = {registerHandler} disabled={loading}/>*/}\n            <div className = 'students'>\n                {\n                    grades.map((grade, index) =>\n                        {\n                            return (\n                                <div className = 'gradeItem'>\n                                    <p>{grade.grade}{grade.letter}</p>\n                                    {\n                                        grade.students.map((student, index) => {\n                                            if (shown.includes(index)){\n                                                return (\n                                                    <NavLink to = {'/profile/' + student.user} key = {index} className = 'studentItem soft_appearing'>\n                                                        <div className = 'nameAndSurname'>\n                                                            <p>{student.name} {student.surname}</p>\n                                                        </div>\n                                                        <p className = 'pic'>{String.fromCodePoint(student.pic)}</p>\n                                                    </NavLink>\n                                                )\n                                            }\n                                        })\n                                    }\n                                </div>\n                            )\n                        }\n\n\n\n                        // grade.students.map((student, index) => {\n                        //     if (shown.includes(index)){\n                        //         return (\n                        //             <NavLink to = {'/profile/' + student.user} key = {index} className = 'studentItem soft_appearing'>\n                        //                 <div className = 'nameAndSurname'>\n                        //                     <p>{student.name} {student.surname} {grade.grade}</p>\n                        //                 </div>\n                        //                 <p className = 'pic'>{String.fromCodePoint(student.pic)}</p>\n                        //                 {/*<p className = 'testName'>{student.birthdate}</p>*/}\n                        //                 {/*<p className = 'testName'>{student.grade}{student.letter}</p>*/}\n                        //             </NavLink>\n                        //         )\n                        //     }\n                        //  })\n\n\n\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Students;"]},"metadata":{},"sourceType":"module"}