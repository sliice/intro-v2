{"ast":null,"code":"var _jsxFileName = \"/Users/alisakrylova/Intro/client/src/components/TestPage.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport './Appearence/index.css';\nimport './Appearence/TestPage.css';\nimport { AuthContext } from \"./Context/AuthContext\";\nimport { useHttp } from \"../Hooks/http.hook\";\nimport { useParams } from 'react-router-dom';\nexport const TestPage = () => {\n  const [test, setTest] = useState({\n    name: '',\n    description: '',\n    shortDescription: ''\n  });\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const link = useParams().id;\n  const fetchTestData = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/tests/${link}`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setTest({\n        name: fetched[0].name,\n        description: fetched[0].description,\n        shortDescription: fetched[0].shortDescription\n      });\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    fetchTestData();\n  }, [fetchTestData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    cls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, test.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, test.shortDescription), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, test.description));\n};","map":{"version":3,"sources":["/Users/alisakrylova/Intro/client/src/components/TestPage.js"],"names":["React","useCallback","useContext","useEffect","useState","AuthContext","useHttp","useParams","TestPage","test","setTest","name","description","shortDescription","token","loading","request","error","clearError","link","id","fetchTestData","fetched","Authorization","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,OAAO,wBAAP;AACA,OAAO,2BAAP;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,WAAW,EAAE,EAAzB;AAA6BC,IAAAA,gBAAgB,EAAE;AAA/C,GAAD,CAAhC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUZ,UAAU,CAACG,WAAD,CAA1B;AACA,QAAM;AAACU,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAwCZ,OAAO,EAArD;AACA,QAAMa,IAAI,GAAGZ,SAAS,GAAGa,EAAzB;AAEA,QAAMC,aAAa,GAAGpB,WAAW,CAAC,YAAY;AAC1C,QAAI;AACA,YAAMqB,OAAO,GAAG,MAAMN,OAAO,CAAE,cAAaG,IAAK,EAApB,EAAuB,KAAvB,EAA8B,IAA9B,EAAoC;AAC7DI,QAAAA,aAAa,EAAG,UAAST,KAAM;AAD8B,OAApC,CAA7B;AAGAJ,MAAAA,OAAO,CAAC;AAACC,QAAAA,IAAI,EAAEW,OAAO,CAAC,CAAD,CAAP,CAAWX,IAAlB;AAAwBC,QAAAA,WAAW,EAAEU,OAAO,CAAC,CAAD,CAAP,CAAWV,WAAhD;AAA6DC,QAAAA,gBAAgB,EAAES,OAAO,CAAC,CAAD,CAAP,CAAWT;AAA1F,OAAD,CAAP;AACH,KALD,CAMA,OAAOW,CAAP,EAAU,CAAE;AACf,GARgC,EAQ9B,CAACV,KAAD,EAAQE,OAAR,CAR8B,CAAjC;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,aAAa;AAChB,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,GAAG,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASZ,IAAI,CAACE,IAAd,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAI,CAACI,gBAAT,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,IAAI,CAACG,WAAT,CAHJ,CADJ;AAOH,CA9BM","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react'\nimport './Appearence/index.css'\nimport './Appearence/TestPage.css'\nimport {AuthContext} from \"./Context/AuthContext\";\nimport {useHttp} from \"../Hooks/http.hook\";\nimport {useParams} from 'react-router-dom'\n\nexport const TestPage = () => {\n\n    const [test, setTest] = useState({ name: '', description: '', shortDescription: ''})\n    const {token} = useContext(AuthContext)\n    const {loading, request, error, clearError} = useHttp();\n    const link = useParams().id\n\n    const fetchTestData = useCallback(async () => {\n        try {\n            const fetched = await request(`/api/tests/${link}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setTest({name: fetched[0].name, description: fetched[0].description, shortDescription: fetched[0].shortDescription})\n        }\n        catch (e) {}\n    }, [token, request])\n\n    useEffect(() => {\n        fetchTestData()\n    }, [fetchTestData])\n\n\n\n    return (\n        <div>\n            <h1 cls>{test.name}</h1>\n            <p>{test.shortDescription}</p>\n            <p>{test.description}</p>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}