{"ast":null,"code":"var _jsxFileName = \"/Users/alisakrylova/Intro/client/src/components/AddTest.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport './Appearence/index.css';\nimport './Appearence/AddTest.css';\nimport { AuthContext } from \"./Context/AuthContext\";\nimport { useHttp } from \"../Hooks/http.hook\";\nexport const AddTest = () => {\n  const {\n    token,\n    userID\n  } = useContext(AuthContext);\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const [testData, setTestData] = useState({\n    name: '',\n    shortDescription: '',\n    description: ''\n  });\n\n  const changeHandler = e => {\n    setTestData({ ...testData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    document.body.style = 'transition-duration: 1s; transition-timing-function: ease-in-out; background: #FFFFFF;';\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"\\u0427\\u0442\\u043E\\u0431\\u044B \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0443, \\u043E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432 :)\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: testData.name,\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0438\",\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"\\u041A\\u0440\\u0430\\u0442\\u043A\\u043E\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"shortDescription\",\n    value: testData.shortDescription,\n    placeholder: \"\\u041A\\u0440\\u0430\\u0442\\u043A\\u043E\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0438\",\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    value: testData.description,\n    placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0438\",\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\nexport default AddTest;","map":{"version":3,"sources":["/Users/alisakrylova/Intro/client/src/components/AddTest.js"],"names":["React","useCallback","useContext","useEffect","useState","AuthContext","useHttp","AddTest","token","userID","loading","request","error","clearError","testData","setTestData","name","shortDescription","description","changeHandler","e","target","value","document","body","style"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAkE,OAAlE;AACA,OAAO,wBAAP;AACA,OAAO,0BAAP;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAEzB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBP,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM;AAACK,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAwCP,OAAO,EAArD;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACrCY,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,gBAAgB,EAAE,EAFmB;AAGrCC,IAAAA,WAAW,EAAE;AAHwB,GAAD,CAAxC;;AAOA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACvBL,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACM,CAAC,CAACC,MAAF,CAASL,IAAV,GAAiBI,CAAC,CAACC,MAAF,CAASC;AAAxC,KAAD,CAAX;AACH,GAFD;;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,GAAsB,wFAAtB;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iVAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAJJ,eAKI;AAAO,IAAA,IAAI,EAAG,MAAd;AAAqB,IAAA,IAAI,EAAG,MAA5B;AAAmC,IAAA,KAAK,EAAIX,QAAQ,CAACE,IAArD;AAA2D,IAAA,WAAW,EAAG,mGAAzE;AAA6F,IAAA,QAAQ,EAAII,CAAC,IAAID,aAAa,CAACC,CAAD,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAPJ,eAQI;AAAU,IAAA,IAAI,EAAG,kBAAjB;AAAoC,IAAA,KAAK,EAAIN,QAAQ,CAACG,gBAAtD;AAAwE,IAAA,WAAW,EAAG,8IAAtF;AAAkH,IAAA,QAAQ,EAAIG,CAAC,IAAID,aAAa,CAACC,CAAD,CAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAVJ,eAWI;AAAU,IAAA,IAAI,EAAG,aAAjB;AAA+B,IAAA,KAAK,EAAIN,QAAQ,CAACI,WAAjD;AAA8D,IAAA,WAAW,EAAG,mGAA5E;AAAgG,IAAA,QAAQ,EAAIE,CAAC,IAAID,aAAa,CAACC,CAAD,CAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAkBH,CAvCM;AAyCP,eAAeb,OAAf","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react'\nimport './Appearence/index.css'\nimport './Appearence/AddTest.css'\nimport {AuthContext} from \"./Context/AuthContext\";\nimport {useHttp} from \"../Hooks/http.hook\";\n\nexport const AddTest = () => {\n\n    const {token, userID} = useContext(AuthContext)\n    const {loading, request, error, clearError} = useHttp();\n\n    const [testData, setTestData] = useState({\n        name: '',\n        shortDescription: '',\n        description: ''\n    })\n\n\n    const changeHandler = e => {\n        setTestData({...testData, [e.target.name]: e.target.value})\n    }\n\n    useEffect(() => {\n        document.body.style = 'transition-duration: 1s; transition-timing-function: ease-in-out; background: #FFFFFF;'\n    }, [])\n\n\n    return (\n        <div>\n            <h1>Добавить тест</h1>\n            <p>Чтобы добавить новую методику, ответьте на несколько вопросов :)</p>\n\n            <h2>Название методики</h2>\n            <input type = 'text' name = 'name' value = {testData.name} placeholder = 'Название методики' onChange = {e => changeHandler(e)}/>\n\n            <h2>Краткое описание</h2>\n            <textarea name = 'shortDescription' value = {testData.shortDescription} placeholder = 'Краткое описание методики' onChange = {e => changeHandler(e)}/>\n\n            <h2>Описание</h2>\n            <textarea name = 'description' value = {testData.description} placeholder = 'Описание методики' onChange = {e => changeHandler(e)}/>\n\n        </div>\n\n\n    )\n}\n\nexport default AddTest;"]},"metadata":{},"sourceType":"module"}