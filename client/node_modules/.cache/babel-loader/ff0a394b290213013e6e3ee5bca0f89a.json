{"ast":null,"code":"var _jsxFileName = \"/Users/alisakrylova/Intro/client/src/components/Tests.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport './Appearence/index.css';\nimport './Appearence/Tests.css';\nimport { useHttp } from \"../Hooks/http.hook\";\nimport { AuthContext } from \"./Context/AuthContext\";\nimport { NavLink } from \"react-router-dom\";\nexport const Tests = () => {\n  const [tests, setTests] = useState([]);\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const fetchTests = useCallback(async () => {\n    try {\n      const fetched = await request('/api/tests', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setTests(fetched);\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    fetchTests();\n    document.body.style = 'transition-duration: .7s; transition-timing-function: ease-in-out; background: white;';\n  }, [fetchTests]);\n\n  const createTest = () => {// document.getElementById('testsCollection').\n  };\n\n  const visitTestPage = useCallback(async () => {\n    try {\n      const fetched = await request(``, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setTest({\n        name: fetched.tests.name,\n        description: fetched.tests.description,\n        shortDescription: fetched.tests.shortDescription,\n        questions: fetched.tests.questions\n      });\n      setQuestions(fetched.questions);\n      setAnswers({ ...answers,\n        testID: fetched.questions.testID\n      });\n    } catch (e) {}\n  }, [token, request]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"\\u041C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    className: \"createbtn\",\n    value: \"+\",\n    onClick: createTest,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"testsCollection\",\n    className: \"tests\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, tests.map((test, index) => {\n    return /*#__PURE__*/React.createElement(NavLink, {\n      to: '/tests/' + test.link,\n      key: index,\n      className: \"testItem soft_appearing\",\n      onClick: visitTestPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"testName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, test.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, test.questions, \" \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, test.shortDescription));\n  })));\n};\nexport default Tests;","map":{"version":3,"sources":["/Users/alisakrylova/Intro/client/src/components/Tests.js"],"names":["React","useCallback","useContext","useEffect","useState","useHttp","AuthContext","NavLink","Tests","tests","setTests","token","loading","request","error","clearError","fetchTests","fetched","Authorization","e","document","body","style","createTest","visitTestPage","setTest","name","description","shortDescription","questions","setQuestions","setAnswers","answers","testID","map","test","index","link"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react';\nimport './Appearence/index.css'\nimport './Appearence/Tests.css'\nimport {useHttp} from \"../Hooks/http.hook\";\nimport {AuthContext} from \"./Context/AuthContext\";\nimport {NavLink} from \"react-router-dom\";\n\nexport const Tests = () => {\n\n    const [tests, setTests] = useState([])\n    const {token} = useContext(AuthContext)\n    const {loading, request, error, clearError} = useHttp();\n\n    const fetchTests = useCallback(async () => {\n        try {\n            const fetched = await request('/api/tests', 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setTests(fetched)\n        } catch (e) {}\n    }, [token, request])\n\n    useEffect(() => {\n        fetchTests()\n        document.body.style = 'transition-duration: .7s; transition-timing-function: ease-in-out; background: white;'\n    }, [fetchTests])\n\n    const createTest = () => {\n\n        // document.getElementById('testsCollection').\n    }\n\n    const visitTestPage = useCallback(async () => {\n        try {\n            const fetched = await request(``, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setTest({name: fetched.tests.name, description: fetched.tests.description, shortDescription: fetched.tests.shortDescription, questions: fetched.tests.questions})\n            setQuestions(fetched.questions)\n            setAnswers({...answers, testID: fetched.questions.testID})\n        }\n        catch (e) {}\n    }, [token, request])\n\n    return (\n        <div>\n            <h1>Методики</h1>\n            <input type='button' className = 'createbtn' value='+' onClick = {createTest} disabled={loading}/>\n            <div id = 'testsCollection' className = 'tests'>\n            { tests.map((test, index) => {\n                return (\n                    <NavLink to = {'/tests/' + test.link} key = {index} className = 'testItem soft_appearing' onClick = {visitTestPage}>\n                        <p className = 'testName'>{test.name}</p>\n                        <p className = 'questions'>{test.questions} вопросов</p>\n                        <p className = 'description'>{test.shortDescription}</p>\n                    </NavLink>\n                )\n            })}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Tests"]},"metadata":{},"sourceType":"module"}