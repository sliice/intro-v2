{"ast":null,"code":"var _jsxFileName = \"/Users/alisakrylova/Intro/client/src/components/NavigationBar.js\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport './Appearence/index.css';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { AuthContext } from \"./Context/AuthContext\";\nimport { useHttp } from \"../Hooks/http.hook\";\nimport { emojiToString } from \"./Functions and const/Emoji\";\nexport const NavigationBar = () => {\n  const location = useLocation();\n  const {\n    userType,\n    username,\n    token\n  } = useContext(AuthContext);\n  const {\n    request\n  } = useHttp();\n  const currentLocation = location.pathname.slice(1);\n  const [pic, setPic] = useState([]);\n  const [navBarState, setNavBarState] = useState(true);\n  let navBarClasses = classNames({\n    navBar: navBarState,\n    hiddenNavBar: !navBarState\n  });\n  const fetchPic = useCallback(async () => {\n    try {\n      const fetched = await request(`/users/get/${username}`, 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      setPic(fetched.pic);\n    } catch (e) {}\n  }, [token, username]);\n  useEffect(() => {\n    const small = 'transform: scale(0.8); opacity: 0.3;';\n    const big = 'transform: scale(1.2); opacity: 1;';\n\n    try {\n      fetchPic();\n      if (userType === 'p') document.getElementById('profile/' + username).style = small;\n      document.getElementById('students').style = small;\n      document.getElementById('tests').style = small;\n      document.getElementById(currentLocation).style = big;\n    } catch (e) {}\n  }, [currentLocation]);\n  useEffect(() => {\n    console.log(navBarState);\n  });\n\n  const showNavBar = e => {\n    e.preventDefault();\n    setNavBarState(true);\n  };\n\n  const hideNavBar = e => {\n    e.preventDefault();\n    setNavBarState(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navBarCover\",\n    onMouseEnter: e => showNavBar(e),\n    onMouseLeave: e => hideNavBar(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: navBarClasses,\n    id: \"navBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/tests\",\n    className: \"picNavBar\",\n    id: \"tests\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"\\uD83D\\uDCCB\"), userType === 'p' && /*#__PURE__*/React.createElement(NavLink, {\n    to: '/profile/' + username,\n    className: \"picNavBar\",\n    id: 'profile/' + username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, emojiToString(pic), !pic[0] && '😊️'), userType === 's' && /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/profile\",\n    className: \"picNavBar\",\n    id: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, emojiToString(pic), !pic[0] && '😊️'), userType === 'p' && /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/students\",\n    className: \"picNavBar\",\n    id: \"students\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDFEB\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }))));\n};\nexport default NavigationBar;","map":{"version":3,"sources":["/Users/alisakrylova/Intro/client/src/components/NavigationBar.js"],"names":["React","useCallback","useContext","useEffect","useState","NavLink","useHistory","useLocation","AuthContext","useHttp","emojiToString","NavigationBar","location","userType","username","token","request","currentLocation","pathname","slice","pic","setPic","navBarState","setNavBarState","navBarClasses","classNames","navBar","hiddenNavBar","fetchPic","fetched","Authorization","e","small","big","document","getElementById","style","console","log","showNavBar","preventDefault","hideNavBar"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Appearence/index.css'\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {AuthContext} from \"./Context/AuthContext\";\nimport {useHttp} from \"../Hooks/http.hook\";\nimport {emojiToString} from \"./Functions and const/Emoji\";\n\n\nexport const NavigationBar = () => {\n\n    const location = useLocation()\n    const {userType, username, token} = useContext(AuthContext)\n    const {request} = useHttp();\n    const currentLocation = location.pathname.slice(1)\n    const [pic, setPic] = useState([])\n    const [navBarState, setNavBarState] = useState(true)\n\n    let navBarClasses = classNames({\n        navBar: navBarState,\n        hiddenNavBar: !navBarState\n    })\n\n\n    const fetchPic = useCallback(async () => {\n        try {\n            const fetched = await request(`/users/get/${username}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setPic(fetched.pic)\n        }\n        catch (e) {}\n    }, [token, username])\n\n    useEffect(() => {\n        const small = 'transform: scale(0.8); opacity: 0.3;'\n        const big = 'transform: scale(1.2); opacity: 1;'\n        try {\n            fetchPic()\n            if (userType === 'p') document.getElementById('profile/' + username).style = small\n            document.getElementById('students').style = small\n            document.getElementById('tests').style = small\n            document.getElementById(currentLocation).style = big\n        }\n        catch (e) {}\n    }, [currentLocation])\n\n    useEffect(() => {\n        console.log(navBarState)\n    })\n\n    const showNavBar = e => {\n        e.preventDefault()\n        setNavBarState(true)\n    }\n\n    const hideNavBar = e => {\n        e.preventDefault()\n        setNavBarState(false)\n    }\n\n    return (\n        <div>\n\n            <div className = 'navBarCover' onMouseEnter={e => showNavBar(e)} onMouseLeave={e => hideNavBar(e)}/>\n\n            <div className = {navBarClasses} id = 'navBar'>\n                <NavLink to = '/tests' className = 'picNavBar' id = 'tests'>\n                    📋\n                </NavLink>\n                {\n                    userType === 'p' &&\n                    <NavLink to = {'/profile/' + username} className = 'picNavBar' id = {'profile/' + username}>\n                        {emojiToString(pic)}\n                        { !pic[0] && '😊️'}\n                    </NavLink>\n                }\n                {\n                    userType === 's' &&\n                    <NavLink to = '/profile' className = 'picNavBar' id = 'profile'>\n                        {emojiToString(pic)}\n                        { !pic[0] && '😊️'}\n                    </NavLink>\n                }\n                {\n                    userType === 'p' &&\n                    <NavLink to = '/students' className='picNavBar' id = 'students'>\n                        👩🏻‍🏫\n                        <p></p>\n                    </NavLink>\n                }\n            </div>\n        </div>\n    )\n}\n    export default NavigationBar\n\n\n"]},"metadata":{},"sourceType":"module"}