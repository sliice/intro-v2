{"ast":null,"code":"var _jsxFileName = \"/Users/alisakrylova/Intro2/client/src/components/Tests.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport './Appearence/index.css';\nimport './Appearence/Tests.css';\nimport { useHttp } from \"../Hooks/Http.hook\";\nimport { AuthContext } from \"./Context/AuthContext\";\nimport { NavLink } from \"react-router-dom\";\nimport { ReactComponent as SortIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!./Appearence/Images/SortIcon.svg\"; // import {ReactComponent as AddIcon} from \"./Appearence/Images/AddIcon.svg\";\n\nimport SearchIcon from \"./Appearence/Images/SearchIcon\";\nimport AddIcon from \"./Appearence/Images/AddIcon\";\nexport const Tests = () => {\n  const [tests, setTests] = useState([]);\n  const {\n    token,\n    userType\n  } = useContext(AuthContext);\n  const {\n    request\n  } = useHttp();\n  const [shown, setShown] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [notFound, setNotFound] = useState();\n  const [sorted, setSorted] = useState(false);\n  const [isSearching, activateSearching] = useState('none');\n  const fetchTests = useCallback(async () => {\n    try {\n      const fetched = await request('/api/tests', 'GET', null, {\n        Authorization: `Bearer ${token}`\n      });\n      fetched.sort((a, b) => a.date < b.date ? 1 : -1);\n      setTests(fetched);\n    } catch (e) {}\n  }, [token, request]);\n\n  const handleSearchActivating = e => {\n    e.preventDefault();\n\n    switch (isSearching) {\n      case 'active':\n        activateSearching('inactive');\n        break;\n\n      case 'none':\n      case 'inactive':\n        activateSearching('active');\n        document.getElementById('search').focus();\n        break;\n    }\n  };\n\n  const doSearch = e => {\n    e.preventDefault();\n\n    try {\n      let searchFilter = e.target.value.toString().toLowerCase();\n      setSearch(searchFilter);\n      setNotFound(false);\n\n      if (searchFilter != '') {\n        let testsArray = [];\n        tests.map(test => {\n          testsArray.push((test.name + test.questions + test.description).toString().toLowerCase());\n        });\n        let indexes = [];\n        testsArray.map((test, i) => {\n          if (test.toString().includes(searchFilter)) indexes.push(i);\n        });\n\n        if (indexes.length != 0) {\n          setShown([...indexes]);\n          setNotFound(false);\n        } else setNotFound(true);\n      } else showAll();\n    } catch (e) {}\n  };\n\n  const doSort = e => {\n    e.preventDefault();\n\n    try {\n      let testsCollection = tests;\n\n      switch (sorted) {\n        case true:\n          document.getElementById('sortIcon').style = 'transform: rotate(360deg);';\n          testsCollection.sort((a, b) => a.date < b.date ? 1 : -1);\n          setTests(testsCollection);\n          setSorted(false);\n          break;\n\n        case false:\n          document.getElementById('sortIcon').style = 'transform: rotate(180deg);';\n          testsCollection.sort((a, b) => a.date > b.date ? 1 : -1);\n          setTests(testsCollection);\n          setSorted(true);\n          break;\n      }\n    } catch (e) {}\n  };\n\n  const showAll = () => {\n    let shownSize = [];\n\n    for (let i = 0; i < tests.length; i++) {\n      shownSize.push(i);\n    }\n\n    setShown([...shownSize]);\n  };\n\n  const declension = questions => {\n    const q = questions % 10;\n\n    switch (q) {\n      case 1:\n        return 'вопрос';\n        break;\n\n      case 2:\n      case 3:\n      case 4:\n        return 'вопроса';\n        break;\n\n      case 5:\n      case 6:\n      case 7:\n      case 8:\n      case 9:\n      case 0:\n        return 'вопросов';\n        break;\n    }\n  };\n\n  useEffect(() => {\n    if (tests.length == 0) fetchTests();\n    document.body.style = 'transition-duration: .7s; transition-timing-function: ease-in-out; background: white;';\n    document.title = 'Методики';\n    if (shown.length == 0) showAll();\n  }, [fetchTests, shown, showAll]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"soft_appearing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"\\u041C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchSortAndAdd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"search\",\n    className: isSearching === 'active' && 'searchAppearing' || isSearching === 'inactive' && 'searchDisappearing' || isSearching === 'none' && 'invisible',\n    placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u043C\\u0435\\u0442\\u043E\\u0434\\u0438\\u043A\\u0430\\u043C\",\n    onChange: e => doSearch(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SearchIcon, {\n    handleSearchActivating: handleSearchActivating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(SortIcon, {\n    onClick: e => doSort(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), userType === 'p' && /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/addtest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"testsColumns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, notFound && /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"notFound\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 30\n    }\n  }, \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"testsCollection1\",\n    className: \"testsColumn2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, !notFound && tests.map((test, index) => {\n    if (shown.includes(index) && index % 2 != 1) return /*#__PURE__*/React.createElement(NavLink, {\n      to: '/tests/' + test.link,\n      key: index,\n      className: \"testItem soft_appearing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"testName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, test.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, test.q, \" \", declension(test.q)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, test.shortDescription));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"testsCollection2\",\n    className: \"testsColumn2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, !notFound && tests.map((test, index) => {\n    if (shown.includes(index) && index % 2 != 0) return /*#__PURE__*/React.createElement(NavLink, {\n      to: '/tests/' + test.link,\n      key: index,\n      className: \"testItem soft_appearing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"testName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }, test.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, test.q, \" \", declension(test.q)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, test.shortDescription));\n  }))));\n};\nexport default Tests;","map":{"version":3,"sources":["/Users/alisakrylova/Intro2/client/src/components/Tests.js"],"names":["React","useCallback","useContext","useEffect","useState","useHttp","AuthContext","NavLink","SearchIcon","AddIcon","Tests","tests","setTests","token","userType","request","shown","setShown","search","setSearch","notFound","setNotFound","sorted","setSorted","isSearching","activateSearching","fetchTests","fetched","Authorization","sort","a","b","date","e","handleSearchActivating","preventDefault","document","getElementById","focus","doSearch","searchFilter","target","value","toString","toLowerCase","testsArray","map","test","push","name","questions","description","indexes","i","includes","length","showAll","doSort","testsCollection","style","shownSize","declension","q","body","title","index","link","shortDescription"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react';\nimport './Appearence/index.css'\nimport './Appearence/Tests.css'\nimport {useHttp} from \"../Hooks/Http.hook\";\nimport {AuthContext} from \"./Context/AuthContext\";\nimport {NavLink} from \"react-router-dom\";\nimport {ReactComponent as SortIcon} from './Appearence/Images/SortIcon.svg'\n// import {ReactComponent as AddIcon} from \"./Appearence/Images/AddIcon.svg\";\nimport SearchIcon from \"./Appearence/Images/SearchIcon\";\nimport AddIcon from \"./Appearence/Images/AddIcon\";\n\nexport const Tests = () => {\n\n    const [tests, setTests] = useState([])\n    const {token, userType} = useContext(AuthContext)\n    const {request} = useHttp();\n    const [shown, setShown] = useState([])\n    const [search, setSearch] = useState([])\n    const [notFound, setNotFound] = useState()\n    const [sorted, setSorted] = useState(false)\n    const [isSearching, activateSearching] = useState('none')\n\n    const fetchTests = useCallback(async () => {\n        try {\n            const fetched = await request('/api/tests', 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            fetched.sort((a, b) => a.date < b.date ? 1 : -1)\n            setTests(fetched)\n        } catch (e) {}\n    }, [token, request])\n\n\n    const handleSearchActivating = e => {\n        e.preventDefault()\n        switch (isSearching){\n            case 'active':\n                activateSearching('inactive');\n                break\n            case 'none':\n            case 'inactive':\n                activateSearching('active');\n                document.getElementById('search').focus()\n                break\n        }\n    }\n\n    const doSearch = e => {\n        e.preventDefault()\n        try {\n            let searchFilter = e.target.value.toString().toLowerCase()\n            setSearch(searchFilter)\n            setNotFound(false)\n            if (searchFilter != '') {\n                let testsArray = []\n                tests.map(test => {\n                    testsArray.push((test.name + test.questions + test.description).toString().toLowerCase())\n                })\n\n                let indexes = []\n                testsArray.map((test, i) => {\n                    if (test.toString().includes(searchFilter))\n                        indexes.push(i)\n                })\n\n                if (indexes.length != 0){\n                    setShown([...indexes])\n                    setNotFound(false)\n                }\n                else setNotFound(true)\n            }\n            else showAll()\n        }\n        catch (e) {}\n    }\n\n    const doSort = e => {\n        e.preventDefault()\n        try {\n            let testsCollection = tests\n            switch (sorted) {\n                case true:\n                    document.getElementById('sortIcon').style = 'transform: rotate(360deg);'\n                    testsCollection.sort((a, b) => a.date < b.date ? 1 : -1)\n                    setTests(testsCollection)\n                    setSorted(false);\n                    break;\n                case false:\n                    document.getElementById('sortIcon').style = 'transform: rotate(180deg);'\n                    testsCollection.sort((a, b) => a.date > b.date ? 1 : -1)\n                    setTests(testsCollection)\n                    setSorted(true);\n                    break;\n            }\n        }\n        catch (e) {}\n    }\n\n    const showAll = () => {\n        let shownSize = []\n        for (let i = 0; i < tests.length; i++){\n            shownSize.push(i)\n        }\n        setShown([...shownSize])\n    }\n\n    const declension = questions => {\n        const q = questions % 10\n        switch (q) {\n            case 1: return 'вопрос'; break;\n            case 2:\n            case 3:\n            case 4: return 'вопроса'; break;\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 0: return 'вопросов'; break;\n        }\n\n    }\n\n\n    useEffect(() => {\n        if (tests.length == 0) fetchTests()\n        document.body.style = 'transition-duration: .7s; transition-timing-function: ease-in-out; background: white;'\n        document.title = 'Методики'\n\n        if (shown.length == 0)\n            showAll()\n    }, [fetchTests, shown, showAll])\n\n    return (\n        <div>\n            <h1 className = 'soft_appearing'>Методики</h1>\n\n\n            <div className = 'searchSortAndAdd'>\n                <input type = 'text' id = 'search'\n                       className = {  isSearching === 'active' && 'searchAppearing' ||\n                       isSearching === 'inactive' && 'searchDisappearing' ||\n                       isSearching === 'none' && 'invisible'}\n                       placeholder = 'Поиск по методикам' onChange = { e => doSearch(e) }/>\n\n                <SearchIcon handleSearchActivating = {handleSearchActivating}/>\n                <SortIcon onClick = {e => doSort(e)}/>\n\n                {\n                    userType === 'p' &&\n                    <NavLink to='/addtest'>\n                        <AddIcon/>\n                    </NavLink>\n                }\n\n\n\n            </div>\n\n            <div className = 'testsColumns'>\n                {notFound && <h1 className = 'notFound'>Ничего не найдено</h1>}\n            <div id = 'testsCollection1' className = 'testsColumn2'>\n            {\n                !notFound &&\n                tests.map((test, index) => {\n                if (shown.includes(index) && index % 2 != 1)\n                return (\n                    <NavLink to = {'/tests/' + test.link} key = {index} className = 'testItem soft_appearing'>\n                        <p className = 'testName'>{test.name}</p>\n                        <p className = 'questions'>{test.q} {declension(test.q)}</p>\n                        <p className = 'description'>{test.shortDescription}</p>\n                    </NavLink>\n                )\n            })}\n            </div>\n\n            <div id = 'testsCollection2' className = 'testsColumn2'>\n                {\n                    !notFound &&\n                    tests.map((test, index) => {\n                        if (shown.includes(index) && index % 2 != 0)\n                            return (\n                                <NavLink to = {'/tests/' + test.link} key = {index} className = 'testItem soft_appearing'>\n                                    <p className = 'testName'>{test.name}</p>\n                                    <p className = 'questions'>{test.q} {declension(test.q)}</p>\n                                    <p className = 'description'>{test.shortDescription}</p>\n                                </NavLink>\n                            )\n                    })}\n            </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Tests"]},"metadata":{},"sourceType":"module"}